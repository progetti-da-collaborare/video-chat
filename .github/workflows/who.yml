on: [push]

permissions:
  contents: write
  pull-requests: write 

jobs:   
  assemble-buttons-panel:
    runs-on: ubuntu-latest
    name: A job making panel to select page
    steps:  #steps of a job are all in one runner
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      #- name: Copy scriptSetIndexFile.js file from "dist" directory to root and rename to "index.js"
      #  run: cp "${{steps.step1.outputs.dirTo}}/q/scriptSetIndexFile.js" "${{steps.step1.outputs.dirTo}}/index.js"
      #       cp "${GITHUB_WORKSPACE}/q/scriptSetIndexFile.js" "${GITHUB_WORKSPACE}/index.js"
      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "progetti-da-collaborare"
          git config user.email "AndrSlav13@yandex.ru"
          git config credential.username "progetti-da-collaborare"
      - name: npm install packages - push is not possible because of long names
        run: npm install |
             npm install @actions/core |
             npm install @actions/github
      #- name: Get base directory - !!private actions are in different folder 
      #  id: directory
      #  uses: ./.github/workflows/actions/
      #- name: Commit
      #  env:
      #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  run: sudo rm -f ./.git/index.lock
      - name: s0
        run: npm run build
      - name: s1
        run: sudo git push origin main
      - name: s7
        run: sudo git add ./index.html
      - name: s8
        run: sudo git commit -m "add index.html" --allow-empty
      - name: s9
        run: sudo git push origin main
      - name: s10
        run: sudo git pull
#      - name: Copy "index.js" and assemble "index.html"
#        id: step1
#        uses: progetti-da-collaborare/scuola-inglese-avanzato@v1.65 
#        with:
#          user-name: 'Mario'
      #    dir: ${{steps.directoryoutputs.directory}}
      # Use the output from the `hello` step
#      - name: Get the output time
#        run: echo "The time was ${{ steps.step1.outputs.time }}"